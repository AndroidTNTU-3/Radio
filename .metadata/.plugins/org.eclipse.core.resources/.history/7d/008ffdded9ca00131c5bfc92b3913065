package com.example.radio;

import java.util.Arrays;





import android.app.ActivityManager;
import android.app.PendingIntent;
import android.app.ActivityManager.RunningServiceInfo;
import android.app.PendingIntent.CanceledException;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.IBinder;
import android.util.Log;
import android.widget.RemoteViews;

public class PlayerWidget extends AppWidgetProvider {
	static ServiceConnection sConn;
	PlayerService playerService;
	static Context context;
	
	final String LOG_TAG = "myLogs";
	public static String ACTION_WIDGET_RECEIVER = "ActionReceiverWidget";
	public static String ACTION_SET_STATION = "com.example.radio.ACTION_SET_STATION";
	  @Override
	  public void onEnabled(Context context) {
		  this.context = context;
	    super.onEnabled(context);
	    Log.d(LOG_TAG, "onEnabled");
	  }

	  @Override
	  public void onUpdate(Context context, AppWidgetManager appWidgetManager,
	      int[] appWidgetIds) {
	    super.onUpdate(context, appWidgetManager, appWidgetIds);
	    Log.d(LOG_TAG, "onUpdate");
	    for (int i : appWidgetIds) {
	        updateWidget(context, appWidgetManager, i);
	      }
	    
	   
	    
	  }

	  static void updateWidget(Context context, AppWidgetManager appWidgetManager, int widgetID){
		  
		  Log.d("DEBUG", "onUpdateWidget");    
		  RemoteViews widgetView = new RemoteViews(context.getPackageName(),
		            R.layout.widget);
		  
		  ComponentName service = new ComponentName(context, PlayerService.class);
		  
		  if (MediaPlayerServiceRunning()){
		  Intent intentId = new Intent(PlayerService.STOP).putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, widgetID).setComponent(service);
		  PendingIntent pIntentId = PendingIntent.getService(context, 0, intentId, 0);	 
		  try {
			pIntentId.send();
		} catch (CanceledException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		  }
		  
		  Intent intentStop = new Intent(PlayerService.STOP).setComponent(service);
		  PendingIntent pIntentStop = PendingIntent.getService(context, 0, intentStop, 0);	    
		  widgetView.setOnClickPendingIntent(R.id.wbuttonStop, pIntentStop);
		  
		  Intent intentPlay = new Intent(PlayerService.PLAY).setComponent(service);
		  PendingIntent pIntentPlay = PendingIntent.getService(context, 0, intentPlay, 0);	    
		  widgetView.setOnClickPendingIntent(R.id.wbuttonPlay, pIntentPlay);
		  
		  Intent intentPause = new Intent(PlayerService.PAUSE).setComponent(service);
		  PendingIntent pIntentPause = PendingIntent.getService(context, 0, intentPause, 0);	    
		  widgetView.setOnClickPendingIntent(R.id.wbuttonPause, pIntentPause);
		  
		  appWidgetManager.updateAppWidget(widgetID, widgetView);
	  }
	  
	  @Override
      public void onReceive(Context context, Intent intent) {
		  Log.d("DEBUG", "onRecive");
		  String action = intent.getAction();
		  		  
		  if (ACTION_SET_STATION.equals(action)){
			  getWidgetId(intent);
			  String nameStation = intent.getStringExtra("nameStation");
			  Log.d("DEBUG", "onStationREcive" + nameStation);
			  RemoteViews widgetView = new RemoteViews(context.getPackageName(),
			            R.layout.widget);
			  widgetView.setTextViewText(R.id.tvwStation, nameStation);
		  }
		  
		  
           super.onReceive(context, intent);
     }
	  
	  
	  @Override
	  public void onDeleted(Context context, int[] appWidgetIds) {
	    super.onDeleted(context, appWidgetIds);
	    Log.d(LOG_TAG, "onDeleted " + Arrays.toString(appWidgetIds));
	  }

	  @Override
	  public void onDisabled(Context context) {
	    super.onDisabled(context);
	    Log.d(LOG_TAG, "onDisabled");
	  }
	  
	  public static int getWidgetId(Intent intent) {
	        Bundle extras = intent.getExtras();
	        int appWidgetId = AppWidgetManager.INVALID_APPWIDGET_ID;
	        if (extras != null) {
	            appWidgetId = extras.getInt(AppWidgetManager.EXTRA_APPWIDGET_ID, AppWidgetManager.INVALID_APPWIDGET_ID);
	        }
	        return appWidgetId;
	    }
	  
	  public static boolean MediaPlayerServiceRunning() {
			 
	        ActivityManager manager = (ActivityManager) context.getSystemService(context.ACTIVITY_SERVICE);
	 
	        for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {
	            if ("com.example.radio.PlayerService".equals(service.service.getClassName())) {
	                return true;
	            }
	        }
	 
	        return false;
	    }

}

package com.example.radio;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.content.Intent;
import android.os.AsyncTask;
import android.util.Log;


public class StationLoader extends AsyncTask<String, Void, ArrayList<Station>> {
	
	public static interface ParserCallBack{
		public void setInfo(ArrayList<Station> array);
	}

	ParserCallBack parserCallBack;
	
	ArrayList<Station> array;

	@Override
	protected ArrayList<Station> doInBackground(String... params) {
		
		array = new ArrayList<Station>();
		
		HttpGet httpRequest = null;

        httpRequest = new HttpGet(params[0]);

        HttpClient httpclient = new DefaultHttpClient();
        
        try {
			HttpResponse response = (HttpResponse) httpclient.execute(httpRequest);
			HttpEntity entity = response.getEntity();
			InputStream stream = entity.getContent();
			array = new StationParser().parse(stream);
			
			
		} catch (ClientProtocolException e) {			
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
        
		return array;

	}
	
	@Override
    protected void onPostExecute(ArrayList<Station> result) {
      super.onPostExecute(result);
      
      if (parserCallBack != null){
  		parserCallBack.setInfo(result);
  		}
      
	}
	
	public void setParserCallBack(ParserCallBack parserCallBack) {
		this.parserCallBack = parserCallBack;
	}
		

}

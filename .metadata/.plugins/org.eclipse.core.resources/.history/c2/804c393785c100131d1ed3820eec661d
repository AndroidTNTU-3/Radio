package com.example.radio;

import java.io.IOException;

import android.app.ProgressDialog;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.os.AsyncTask;
import android.os.Binder;
import android.os.IBinder;
import android.util.Log;

public class PlayerService extends Service {
	
	MediaPlayer mediaPlayer;
	MediaPlayerBinder binder = new MediaPlayerBinder();

	@Override
	public IBinder onBind(Intent arg0) {
		// TODO Auto-generated method stub
		return binder;
	}
	
	public void onCreate() {
		
		mediaPlayer = new MediaPlayer();
		
	}
	
	public class MediaPlayerBinder extends Binder {
        /**
         * Returns the instance of this service for a client to make method calls on it.
         * @return the instance of this service.
         */
        public PlayerService getService() {
            return PlayerService.this;
        }
 
    }
 
    /**
     * Returns the contained StatefulMediaPlayer
     * @return
     */
    public MediaPlayer getMediaPlayer() {
        return mediaPlayer;
    }
	
	 public int onStartCommand(Intent intent, int flags, int startId) {
		   
		    String url = intent.getStringExtra("url");
		    if (url != null){
		    //Log.d("URL", url);
		    Player player = new Player(this.getApplicationContext(), mediaPlayer);
		    player.execute(url);
		    }
		    return super.onStartCommand(intent, flags, startId);
		  }
	 
	 public void onStopPlayer(){
		 Log.d("DEBUG", "In stop");
		 mediaPlayer.stop();
	 }
	
	private class Player extends AsyncTask<String, Void, Boolean> {
	    private ProgressDialog progress;
	    private MediaPlayer mediaPlayer;
	    Context context;
	    
	    public Player(Context context, MediaPlayer mmediaPlayer) {
	    	this.context = context;   	
	      	mediaPlayer = mmediaPlayer;

	       // progress = new ProgressDialog(context);
	        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
	    }

	    
	    @Override
	    protected void onPreExecute() {
	        // TODO Auto-generated method stub
	        super.onPreExecute();
	       // this.progress.setMessage("Buffering...");
	       // this.progress.show();

	    }
	    
	    @Override
	    protected Boolean doInBackground(String... params) {
	        Boolean prepared;
	        try {
	        	
	            mediaPlayer.setDataSource(params[0]);           
	            mediaPlayer.prepare();
	            prepared = true;
	            
	        } catch (IllegalArgumentException e) {
	            // TODO Auto-generated catch block
	            Log.d("IllegarArgument", e.getMessage());
	            prepared = false;
	            e.printStackTrace();
	        } catch (SecurityException e) {
	            // TODO Auto-generated catch block
	            prepared = false;
	            e.printStackTrace();
	        } catch (IllegalStateException e) {
	            // TODO Auto-generated catch block
	            prepared = false;
	            e.printStackTrace();
	        } catch (IOException e) {
	            // TODO Auto-generated catch block
	            prepared = false;
	            e.printStackTrace();
	        }
	        return prepared;
	    }

	    @Override
	    protected void onPostExecute(Boolean result) {
	        // TODO Auto-generated method stub
	        super.onPostExecute(result);
	      /*  if (progress.isShowing()) {
	            progress.cancel();
	        }
	        Log.d("Prepared", "//" + result);*/
	        mediaPlayer.start();

	    }
	    
	   
	}


}
